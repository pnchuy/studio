
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access to collections needed for browsing the site
    match /books/{bookId} {
      allow read: if true;
      allow write: if false; // Explicitly deny writes for safety
    }

    match /authors/{authorId} {
      allow read: if true;
      allow write: if false;
    }

    match /genres/{genreId} {
      allow read: if true;
      allow write: if false;
    }

    match /series/{seriesId} {
      allow read: if true;
      allow write: if false;
    }

    // User profiles
    match /users/{userId} {
      // Allow any authenticated user to read user data (needed for admin checks etc.)
      allow read: if request.auth != null;
      
      // Allow a user to create their own profile document upon signup
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow an authenticated user to update their own profile (e.g. change name)
      // For role changes, this should be restricted to admins in a real app
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Prevent users from deleting their own accounts through this rule for safety
      allow delete: if false; 
    }
    
    // By default, no other documents can be read or written to.
    // This is implicitly handled by not having a match block, but we can be explicit.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
