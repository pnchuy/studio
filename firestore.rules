
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isManagerOrAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole == 'ADMIN' || userRole == 'MANAGER';
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Public data collections (books, authors, etc.)
    match /{collection}/{docId} where collection in ['books', 'authors', 'genres', 'series'] {
      allow read: if true;
      allow write: if request.auth != null && isManagerOrAdmin();
    }
    
    // User profiles
    match /users/{userId} {
      // Anyone can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can read their own profile. Managers/Admins can read any profile.
      allow read: if request.auth != null && (request.auth.uid == userId || isManagerOrAdmin());
      // Users can update their own profile.
      allow update: if request.auth != null && request.auth.uid == userId;
      // Only Admins can delete users.
      allow delete: if request.auth != null && isAdmin();
    }

    // System settings (e.g., logo)
    match /system/{docId} {
      // Anyone can read system settings
      allow read: if true;
      // Only Admins can write to system settings
      allow write: if request.auth != null && isAdmin();
    }
  }
}
