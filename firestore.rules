rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow public read access to collections needed for browsing.
    match /books/{bookId} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    
    match /authors/{authorId} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    
    match /genres/{genreId} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    
    match /series/{seriesId} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }

    // Secure the users collection.
    match /users/{userId} {
      // Allow a user to read their own document. Admins can read any user.
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN');
      
      // Allow a user to create their own document upon signup.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow a user to update their own data, but not their role.
      // Admins can update any user's role.
      allow update: if request.auth != null && (
        (request.auth.uid == userId && !( 'role' in request.resource.data && request.resource.data.role != resource.data.role)) ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN')
      );
      
      // Only admins or managers can delete users (but not other admins).
      allow delete: if request.auth != null && 
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']) &&
                      resource.data.role != 'ADMIN';
    }
  }
}