rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && getUserRole(request.auth.uid) == 'ADMIN';
    }

    function isManager() {
      return isSignedIn() && getUserRole(request.auth.uid) == 'MANAGER';
    }

    function isManagerOrAdmin() {
      return isSignedIn() && (isAdmin() || isManager());
    }

    // Public collections can be read by anyone, but only written to by managers/admins
    match /{collection}/{docId}
      where collection in ['books', 'authors', 'genres', 'series', 'system'] {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }
    
    // User collection rules
    match /users/{userId} {
      // Any authenticated user can read any user's public profile
      allow read: if isSignedIn();

      // Users can create their own profile
      allow create: if isOwner(userId);
      
      // Users can update their own profile. Admins can update any profile.
      // Managers can update MEMBER profiles.
      allow update: if isOwner(userId) || isAdmin() || (isManager() && getUserRole(userId) == 'MEMBER');

      // Only Admins can delete users.
      // A Manager can delete a MEMBER.
      allow delete: if isAdmin() || (isManager() && getUserRole(userId) == 'MEMBER');
    }
  }
}