
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin or Manager roles
    function isManagerOrAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER'];
    }

    // Helper function to check for Admin role
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Public collections: anyone can read, only managers/admins can write.
    match /{collection}/{docId} where collection in ['books', 'authors', 'genres', 'series'] {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }
    
    // System settings: public read for logo, admin write
    match /system/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User profiles
    match /users/{userId} {
      // Allow user creation (signup)
      allow create: if request.auth != null;
      
      // Allow users to read/update their own profile
      allow read, update: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins to manage any user. Managers can manage Members.
      allow write: if isAdmin() || (isManagerOrAdmin() && resource.data.role == 'MEMBER');
      allow list: if isManagerOrAdmin();
    }
  }
}
