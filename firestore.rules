
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /books/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    match /authors/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    match /genres/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    match /series/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }
    match /users/{userId} {
      // Allow anyone to read user data. This is necessary for username login to work,
      // as the app needs to query the users collection to find the email associated with a username.
      allow read: if true;

      // Allow users to create their own profile upon signup.
      // Allow users to update their own profile.
      allow create, update: if request.auth != null && request.auth.uid == userId;

      // Only ADMINs can delete users (for now, this is a restrictive rule).
      allow delete: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN');
    }
  }
}
