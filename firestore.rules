rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the role of the currently signed-in user
    function getRequestingUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read user profiles.
      allow read: if request.auth != null;

      // An authenticated user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // An admin can update any user's document.
      // A user can update their own document.
      allow update: if request.auth != null && (getRequestingUserRole() == 'ADMIN' || request.auth.uid == userId);
      
      // Only an admin can delete a user document (and not themselves).
      allow delete: if request.auth != null && getRequestingUserRole() == 'ADMIN' && request.auth.uid != userId;
    }

    // Rules for 'books', 'authors', and 'genres' collections
    match /{collection}/{docId} where collection in ['books', 'authors', 'genres'] {
      // Anyone can read data from these collections.
      allow read: if true;

      // Only admins or managers can create, update, or delete data in these collections.
      allow write: if request.auth != null && (getRequestingUserRole() == 'ADMIN' || getRequestingUserRole() == 'MANAGER');
    }
  }
}
