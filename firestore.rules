rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isManagerOrAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER'];
    }

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Public data: anyone can read, only managers/admins can write.
    match /{collection}/{docId} where collection in ['books', 'authors', 'genres', 'series'] {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }
    
    // System settings: anyone can read, only admins can write.
    match /system/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User data
    match /users/{userId} {
      // Allow user creation if the user is creating their own profile
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow users to read their own data.
      // Allow admins and managers to read any user's data.
      allow read: if (request.auth != null && request.auth.uid == userId) || isManagerOrAdmin();

      // Allow users to update their own data.
      // Allow admins to update any user.
      // Allow managers to update members.
      allow update: if (request.auth != null && request.auth.uid == userId) ||
                     isAdmin() ||
                     (isManagerOrAdmin() && resource.data.role == 'MEMBER');
      
      // Only admins can delete users (but not other admins)
      allow delete: if isAdmin() && resource.data.role != 'ADMIN';
    }
  }
}
