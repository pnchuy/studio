rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or manager.
    // It verifies if the user's UID exists in the 'admins' collection.
    // This is more reliable than using get() on the users collection during writes.
    function isManagerOrAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || isManagerOrAdmin());
      allow delete: if isManagerOrAdmin();
    }

    match /admins/{userId} {
      allow read: if true;
      // Only an existing admin can add or remove other admins.
      allow write: if isManagerOrAdmin();
    }
    
    match /books/{bookId} {
      allow read: if true;
      allow create, update, delete: if isManagerOrAdmin();
    }
    
    match /authors/{authorId} {
      allow read: if true;
      allow create, update, delete: if isManagerOrAdmin();
    }

    match /genres/{genreId} {
      allow read: if true;
      allow create, update, delete: if isManagerOrAdmin();
    }

    match /series/{seriesId} {
      allow read: if true;
      allow create, update, delete: if isManagerOrAdmin();
    }

    match /system/{docId} {
        allow read: if true;
        allow write: if isManagerOrAdmin();
    }
  }
}
