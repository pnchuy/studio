rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isManagerOrAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER'];
    }
    
    function isAdmin() {
       return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    match /{collection}/{docId} 
      where collection in ['books', 'authors', 'genres', 'series'] {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }
    
    match /system/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isManagerOrAdmin();
      allow create: if true;
      allow update(newData): if request.auth.uid == userId 
          // Make sure user cannot change their own role
          && newData.role == resource.data.role;
      allow update: if isManagerOrAdmin(); 
      allow delete: if isManagerOrAdmin();
    }
  }
}
