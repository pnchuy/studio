rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Returns true if the current user is an admin or a manager.
    function isManagerOrAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return request.auth != null && userRole in ['ADMIN', 'MANAGER'];
    }
    
    // Returns true if the current user is an admin.
    function isAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return request.auth != null && userRole == 'ADMIN';
    }

    // Books, authors, genres, and series are public to read.
    // Only managers and admins can write to them.
    match /books/{bookId} {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }

    match /authors/{authorId} {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }

    match /genres/{genreId} {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if true;
      allow write: if isManagerOrAdmin();
    }

    // User profiles can be created by anyone.
    // Users can read/update their own profile.
    // Managers/Admins can read/update any user profile (except an Admin's role).
    match /users/{userId} {
      allow create: if true;
      allow read: if request.auth.uid == userId || isManagerOrAdmin();
      allow update: if request.auth.uid == userId || 
                       (isManagerOrAdmin() && !(resource.data.role == 'ADMIN' && request.resource.data.role != 'ADMIN'));
      allow delete: if isAdmin();
    }
    
    // System settings are only accessible by Admins.
    match /system/{docId} {
        allow read, write: if isAdmin();
    }
  }
}