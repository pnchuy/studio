rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to check user roles
    function isManagerOrAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER'];
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Public collections: anyone can read, only managers/admins can write.
    match /{collection}/{docId} where collection in ['books', 'authors', 'genres', 'series'] {
      allow read: if true;
      allow write: if request.auth != null && isManagerOrAdmin();
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      
      allow create: if request.auth.uid == userId;
      
      allow update: if (request.auth.uid == userId) || 
                       (isManagerOrAdmin() && resource.data.role == 'MEMBER') ||
                       (isAdmin() && resource.data.role in ['MEMBER', 'MANAGER']);
                       
      allow delete: if isAdmin() && resource.data.role != 'ADMIN';
    }

    // System settings - only admins can access
    match /system/{docId} {
      allow read, write: if request.auth != null && isAdmin();
    }
  }
}
